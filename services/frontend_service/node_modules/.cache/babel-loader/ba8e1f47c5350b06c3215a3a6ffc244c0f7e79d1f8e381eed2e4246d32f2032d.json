{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const uploadImage = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await api.post('/predict', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return {\n      data: response.data,\n      status: response.status\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response, _error$response$data, _error$response2;\n      return {\n        data: {},\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred',\n        status: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) || 500\n      };\n    }\n    throw error;\n  }\n};\nexport const getTrainingMetrics = async () => {\n  try {\n    const response = await api.get('/training-metrics');\n    return {\n      data: response.data,\n      status: response.status\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response3, _error$response3$data, _error$response4;\n      return {\n        data: {},\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'An error occurred',\n        status: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) || 500\n      };\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","uploadImage","file","formData","FormData","append","response","post","data","status","error","isAxiosError","_error$response","_error$response$data","_error$response2","message","getTrainingMetrics","get","_error$response3","_error$response3$data","_error$response4"],"sources":["/Users/michaeldespo/Library/Mobile Documents/com~apple~CloudDocs/Mike Personal/ML AI Engineering Projects/Placeholder Deep Learning/services/frontend_service/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Prediction, TrainingMetrics, ApiResponse } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const uploadImage = async (file: File): Promise<ApiResponse<Prediction>> => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  try {\n    const response = await api.post('/predict', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return { data: response.data, status: response.status };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      return {\n        data: {} as Prediction,\n        error: error.response?.data?.message || 'An error occurred',\n        status: error.response?.status || 500,\n      };\n    }\n    throw error;\n  }\n};\n\nexport const getTrainingMetrics = async (): Promise<ApiResponse<TrainingMetrics>> => {\n  try {\n    const response = await api.get('/training-metrics');\n    return { data: response.data, status: response.status };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      return {\n        data: {} as TrainingMetrics,\n        error: error.response?.data?.message || 'An error occurred',\n        status: error.response?.status || 500,\n      };\n    }\n    throw error;\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAU,IAAuC;EACjF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,UAAU,EAAEJ,QAAQ,EAAE;MACpDH,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAO;MAAEQ,IAAI,EAAEF,QAAQ,CAACE,IAAI;MAAEC,MAAM,EAAEH,QAAQ,CAACG;IAAO,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIlB,KAAK,CAACmB,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAE,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;MAC7B,OAAO;QACLN,IAAI,EAAE,CAAC,CAAe;QACtBE,KAAK,EAAE,EAAAE,eAAA,GAAAF,KAAK,CAACJ,QAAQ,cAAAM,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,mBAAmB;QAC3DN,MAAM,EAAE,EAAAK,gBAAA,GAAAJ,KAAK,CAACJ,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBL,MAAM,KAAI;MACpC,CAAC;IACH;IACA,MAAMC,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAG,MAAAA,CAAA,KAAmD;EACnF,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMT,GAAG,CAACoB,GAAG,CAAC,mBAAmB,CAAC;IACnD,OAAO;MAAET,IAAI,EAAEF,QAAQ,CAACE,IAAI;MAAEC,MAAM,EAAEH,QAAQ,CAACG;IAAO,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIlB,KAAK,CAACmB,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAQ,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;MAC7B,OAAO;QACLZ,IAAI,EAAE,CAAC,CAAoB;QAC3BE,KAAK,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAACJ,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,mBAAmB;QAC3DN,MAAM,EAAE,EAAAW,gBAAA,GAAAV,KAAK,CAACJ,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBX,MAAM,KAAI;MACpC,CAAC;IACH;IACA,MAAMC,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}