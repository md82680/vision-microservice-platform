{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:8000';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});export const uploadImage=async file=>{const formData=new FormData();formData.append('file',file);try{const response=await api.post('/predict',formData,{headers:{'Content-Type':'multipart/form-data'}});return{data:response.data,status:response.status};}catch(error){if(axios.isAxiosError(error)){var _error$response,_error$response$data,_error$response2;return{data:{},error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'An error occurred',status:((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)||500};}throw error;}};export const getTrainingMetrics=async()=>{try{const response=await api.get('/training-metrics');return{data:response.data,status:response.status};}catch(error){if(axios.isAxiosError(error)){var _error$response3,_error$response3$data,_error$response4;return{data:{},error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'An error occurred',status:((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)||500};}throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","uploadImage","file","formData","FormData","append","response","post","data","status","error","isAxiosError","_error$response","_error$response$data","_error$response2","message","getTrainingMetrics","get","_error$response3","_error$response3$data","_error$response4"],"sources":["/Users/michaeldespo/Library/Mobile Documents/com~apple~CloudDocs/Mike Personal/ML AI Engineering Projects/Placeholder Deep Learning/services/frontend_service/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Prediction, TrainingMetrics, ApiResponse } from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const uploadImage = async (file: File): Promise<ApiResponse<Prediction>> => {\n  const formData = new FormData();\n  formData.append('file', file);\n  \n  try {\n    const response = await api.post('/predict', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return { data: response.data, status: response.status };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      return {\n        data: {} as Prediction,\n        error: error.response?.data?.message || 'An error occurred',\n        status: error.response?.status || 500,\n      };\n    }\n    throw error;\n  }\n};\n\nexport const getTrainingMetrics = async (): Promise<ApiResponse<TrainingMetrics>> => {\n  try {\n    const response = await api.get('/training-metrics');\n    return { data: response.data, status: response.status };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      return {\n        data: {} as TrainingMetrics,\n        error: error.response?.data?.message || 'An error occurred',\n        status: error.response?.status || 500,\n      };\n    }\n    throw error;\n  }\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,uBAAuB,CAElF,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,IAAU,EAAuC,CACjF,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAT,GAAG,CAACU,IAAI,CAAC,UAAU,CAAEJ,QAAQ,CAAE,CACpDH,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAEQ,IAAI,CAAEF,QAAQ,CAACE,IAAI,CAAEC,MAAM,CAAEH,QAAQ,CAACG,MAAO,CAAC,CACzD,CAAE,MAAOC,KAAK,CAAE,CACd,GAAIlB,KAAK,CAACmB,YAAY,CAACD,KAAK,CAAC,CAAE,KAAAE,eAAA,CAAAC,oBAAA,CAAAC,gBAAA,CAC7B,MAAO,CACLN,IAAI,CAAE,CAAC,CAAe,CACtBE,KAAK,CAAE,EAAAE,eAAA,CAAAF,KAAK,CAACJ,QAAQ,UAAAM,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBJ,IAAI,UAAAK,oBAAA,iBAApBA,oBAAA,CAAsBE,OAAO,GAAI,mBAAmB,CAC3DN,MAAM,CAAE,EAAAK,gBAAA,CAAAJ,KAAK,CAACJ,QAAQ,UAAAQ,gBAAA,iBAAdA,gBAAA,CAAgBL,MAAM,GAAI,GACpC,CAAC,CACH,CACA,KAAM,CAAAC,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,kBAAkB,CAAG,KAAAA,CAAA,GAAmD,CACnF,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAT,GAAG,CAACoB,GAAG,CAAC,mBAAmB,CAAC,CACnD,MAAO,CAAET,IAAI,CAAEF,QAAQ,CAACE,IAAI,CAAEC,MAAM,CAAEH,QAAQ,CAACG,MAAO,CAAC,CACzD,CAAE,MAAOC,KAAK,CAAE,CACd,GAAIlB,KAAK,CAACmB,YAAY,CAACD,KAAK,CAAC,CAAE,KAAAQ,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAC7B,MAAO,CACLZ,IAAI,CAAE,CAAC,CAAoB,CAC3BE,KAAK,CAAE,EAAAQ,gBAAA,CAAAR,KAAK,CAACJ,QAAQ,UAAAY,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBV,IAAI,UAAAW,qBAAA,iBAApBA,qBAAA,CAAsBJ,OAAO,GAAI,mBAAmB,CAC3DN,MAAM,CAAE,EAAAW,gBAAA,CAAAV,KAAK,CAACJ,QAAQ,UAAAc,gBAAA,iBAAdA,gBAAA,CAAgBX,MAAM,GAAI,GACpC,CAAC,CACH,CACA,KAAM,CAAAC,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}